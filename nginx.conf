events {
    worker_connections 1024;
}

http {
    error_log  /usr/local/openresty/nginx/logs/error.log  debug;
    # resolver 127.0.0.1;
    # Replace with public DNS (e.g., Google DNS)
    resolver 8.8.8.8 8.8.4.4 valid=30s;
    include mime.types;
    default_type application/octet-stream;

    # 添加共享内存字典，用于 API 限流
    lua_shared_dict limit_store 10m;

    sendfile on;
    keepalive_timeout 65;

    # 包含 SSL 配置（使用绝对路径）
    include /usr/local/openresty/nginx/conf/ssl.conf;

    # Lua 模块搜索路径
    lua_package_path "$prefix/conf/lua/?.lua;;./?.lua;" ;
    lua_package_cpath "$prefix/conf/lua/?.so;;";

    # HTTP 服务器 - 将所有 HTTP 请求重定向到 HTTPS
    server {
        listen 80;
        server_name localhost;
        
        # 将所有 HTTP 请求重定向到 HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 服务器
    server {
        listen 443 ssl http2;
        server_name localhost;

        # SSL 证书配置
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        # 为 /web-chatbox/ 静态文件添加独立 location，不进行鉴权
        location /web-chatbox/ {
            alias /ai/mllm/web-chatbox/;
            index index.html;
            
            # CORS headers for static content
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range";
            
            # Handle preflight OPTIONS requests for static files (though less common)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # 所有其他请求（包括 /v1/chat/completions）都由 api_gateway.lua 处理，并添加 CORS 头部
        location / {
            default_type application/json;
            
            # CORS headers for API calls
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range";

            # Handle preflight OPTIONS requests for API
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            content_by_lua_file "/ai/mllm/api_gateway.lua";
        }

        # SSL 相关安全头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
}